{"version":3,"sources":["store.js","simpleMap.jsx","weather_info.jsx","dashboard.js","App.js","serviceWorker.js","index.js"],"names":["defaultCity","MapContainer","_React$Component","props","_this","Object","classCallCheck","this","_this$props$data","possibleConstructorReturn","getPrototypeOf","call","data","lng","lat","state","center","inherits","createClass","key","value","prevProps","name","_this$props$data2","setState","_this$props$data3","style","position","width","height","react_default","a","createElement","dist","google","initialCenter","zoom","ref","locationRef","React","Component","GoogleApiWrapper","apiKey","WeatherInfoComponent","main","weather","Typography","variant","component","src","concat","icon","padding","Math","ceil","temp","temp_max","temp_min","humidity","CTX","createContext","initialState","reducer","action","payload","cod","_action$payload","coord","lon","type","Store","fetch","then","res","json","dispatch","_React$useReducer","useReducer","_React$useReducer2","slicedToArray","weatherInfo","Provider","fetchData","error","children","useStyles","makeStyles","theme","root","spacing","margin","bottomNav","marginTop","flex","display","endTitle","borderBottom","paddingBottom","weatherWindow","mapWindow","textField","marginLeft","Dashboard","classes","_React$useContext","useContext","_React$useState","useState","_React$useState2","textValue","changeTextValue","_React$useState3","_React$useState4","setValue","Paper","className","weather_info","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","label","onClick","window","open","viewBox","fill","d","id","simpleMap","TextField","e","target","Button","color","button","App","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9107cee1.chunk.js","sourcesContent":["import React from 'react';\n\nexport const CTX = React.createContext();\n\n//\"coord\":{\"lon\":-81.74,\"lat\":41.44}\n\nconst initialState = {\n    name: '',\n    weather: [{ main: '', icon: '' }],\n    main: { temp: '', temp_max: '', temp_min: '' },\n    lng: -73.97,\n    lat: 40.76,\n};\n\nfunction reducer(state, action) {\n    if(action.payload.cod === '404' || action.payload.cod === '400') {\n        return ({\n                name: '',\n                weather: [{ main: '', icon: '' }],\n                main: { temp: '', temp_max: '', temp_min: '' },\n            }\n        );\n    }\n    const { name, weather, main, coord } = action.payload;\n    const {lon, lat} = coord;\n    switch (action.type) {\n        case \"RECEIVE_LOCATION\":\n            return ({\n                name,\n                weather,\n                main,\n                lng: lon,\n                lat,\n            });\n\n        default:\n            return state;\n    }\n}\n\n\nlet defaultCity;\n\nexport default function Store(props) {\n\n    if (!defaultCity) {\n        fetch(`https://api.openweathermap.org/data/2.5/weather?zip=10022,us&units=imperial&appid=a673f727f21560d303446f34d91487b1`)\n            .then(res => {\n                return res.json();\n            }).then(res => {\n                dispatch({ type: \"RECEIVE_LOCATION\", payload: res });\n            });\n        defaultCity = true;\n    }\n\n    const [weatherInfo, dispatch] = React.useReducer(reducer, initialState);\n\n    const fetchData = function (value) {\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${value}&units=imperial&appid=a673f727f21560d303446f34d91487b1`)\n            .then(res => {\n                return res.json();\n            }).then(res => {\n                dispatch({ type: \"RECEIVE_LOCATION\", payload: res });\n            }, (error) => {\n                dispatch({type: \"RECEIVE_LOCATION\", payload: initialState});\n            }\n            );\n    };\n    return (\n        <CTX.Provider value={{ fetchData, weatherInfo }}>\n            {props.children}\n        </CTX.Provider>\n    )\n}","import React from 'react';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\n\nexport class MapContainer extends React.Component {\n    constructor(props){\n        super(props);\n        const { lng, lat } = this.props.data;\n        this.state = {\n            center: {\n            lng,\n            lat,\n            },\n        };\n    }\n\n    componentDidUpdate(prevProps){\n        if(this.props.data.name !== prevProps.data.name){\n            const { lng, lat } = this.props.data;\n            this.setState({center:{lng,lat}})\n        }\n    }\n    \n    render() {\n        const { lng, lat } = this.props.data;\n\n        const center = {\n            lng,\n            lat\n        };\n        const style = {\n            position: 'relative',\n            width: '100%',\n            height: '400px'\n        };\n        if (lng && lat) {\n            return (\n                <div style={style}>\n                    <Map\n                        style={style}\n                        google={this.props.google}\n                        initialCenter={center}\n                        center={center}\n                        zoom={11}\n                        ref={this.locationRef}\n                    />\n                </div>\n            );\n        } else {\n            debugger\n            return(\n                <div style={style}>\n                    <Map\n                        style={style}\n                        google={this.props.google}\n                        initialCenter={this.state.center}\n                        center={this.state.center}\n                        zoom={11}\n                        ref={this.locationRef}\n                    />\n                </div> \n            )\n        }\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: (\"AIzaSyCXWQkmdPXNbv6Zj5dW3GN5mpPM1zTh7nI\")\n})(MapContainer)","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nclass WeatherInfoComponent extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const {main, weather, name} = this.props.data;\n        if(main && weather && name) {\n            return (\n            <div>\n                <Typography variant=\"h4\" component=\"h4\">\n                    {name}\n                </Typography>\n\n                <img src={`http://openweathermap.org/img/wn/${weather[0].icon}@2x.png`}/> \n                <Typography variant=\"h5\" component=\"h5\">\n                    {weather[0].main}\n                </Typography>\n\n                <Typography variant=\"h5\" component=\"h5\" style={{ padding: '20px'}}>\n                    {Math.ceil(main.temp) + '°'}\n                </Typography>\n\n                <Typography variant=\"subtitle1\" component=\"h2\">\n                    Today's High: {main.temp_max}° &nbsp; Today's Low: {main.temp_min}°\n                </Typography>\n\n                <Typography variant=\"subtitle2\" component=\"h2\" style={{padding: '10px'}}>\n                    Humidity: {main.humidity}%\n                </Typography>\n            </div>\n        )\n        } else {\n            return (\n                <div>\n                    <Typography variant=\"subtitle2`\" component=\"h2\" style={{ padding: '20px' }}>\n                        The search could not return any result!\n                    </Typography>\n                    \n                    <Typography variant=\"h5\" component=\"h5\" style={{ padding: '10px' }}>\n                        Please be a little more specific.\n                    </Typography>\n\n                    <Typography variant=\"subtitle1\" component=\"h2\">\n                        You can use the map to look around the globe!\n                    </Typography>\n                </div>\n            )\n        }\n    }\n}\n\nexport default WeatherInfoComponent;","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport MapContainer from './simpleMap';\n\nimport Button from '@material-ui/core/Button';\n\nimport TextField from '@material-ui/core/TextField';\nimport WeatherInfoComponent from './weather_info';\n\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\n\nimport {CTX} from './store';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: theme.spacing(3, 2),\n        margin: '50px'\n    },\n    bottomNav:{\n        width: '100%',\n        marginTop: 20\n    },\n    flex: {\n        display: 'flex',\n    },\n\n    endTitle: {\n        borderBottom: '1px dashed grey',\n        paddingBottom: '10px'\n    },\n    weatherWindow: {\n        marginTop:40,\n        width: '40%',\n        height: '400px',\n    },\n    mapWindow: {\n        marginTop: 20,\n        width: '60%',\n        height: '400px',\n    },\n    textField: {\n        width: '100%',\n        marginLeft: '40%'\n    }\n}));\n\nexport default function Dashboard() {\n    const classes = useStyles();\n    //CTX STORE\n    const {fetchData, weatherInfo} = React.useContext(CTX);\n    //Local STORE\n    const [textValue, changeTextValue] = React.useState('');\n    const [value, setValue] = React.useState(0);\n\n    return (\n        <div>\n            <Paper className={classes.root}>\n                <Typography variant=\"h4\" component=\"h4\" style={{paddingBottom: \"20px\"}}>\n                    Yarden's Weather App\n                </Typography>\n\n                <Typography variant=\"h5\" component=\"h5\" className={classes.endTitle}>\n                    Find out what's the weather like around the world!\n                </Typography>\n\n                <div className={classes.flex}>\n                    <div className={classes.weatherWindow}>\n                        <WeatherInfoComponent data={weatherInfo}/>\n                        <BottomNavigation\n                            value={value}\n                            onChange={(event, newValue) => {\n                                setValue(newValue);\n                            }}\n                            showLabels\n                            className={classes.bottomNav}\n                        >\n                            <BottomNavigationAction label=\"Github\" onClick={() => window.open(\"https://github.com/yardenroee/WeatherApp\", \"_blank\")} icon={<svg style={{ width: 32, height: 32 }} viewBox=\"0 0 24 24\">\n                                <path fill=\"#000000\" d=\"M12,2A10,10 0 0,0 2,12C2,16.42 4.87,20.17 8.84,21.5C9.34,21.58 9.5,21.27 9.5,21C9.5,20.77 9.5,20.14 9.5,19.31C6.73,19.91 6.14,17.97 6.14,17.97C5.68,16.81 5.03,16.5 5.03,16.5C4.12,15.88 5.1,15.9 5.1,15.9C6.1,15.97 6.63,16.93 6.63,16.93C7.5,18.45 8.97,18 9.54,17.76C9.63,17.11 9.89,16.67 10.17,16.42C7.95,16.17 5.62,15.31 5.62,11.5C5.62,10.39 6,9.5 6.65,8.79C6.55,8.54 6.2,7.5 6.75,6.15C6.75,6.15 7.59,5.88 9.5,7.17C10.29,6.95 11.15,6.84 12,6.84C12.85,6.84 13.71,6.95 14.5,7.17C16.41,5.88 17.25,6.15 17.25,6.15C17.8,7.5 17.45,8.54 17.35,8.79C18,9.5 18.38,10.39 18.38,11.5C18.38,15.32 16.04,16.16 13.81,16.41C14.17,16.72 14.5,17.33 14.5,18.26C14.5,19.6 14.5,20.68 14.5,21C14.5,21.27 14.66,21.59 15.17,21.5C19.14,20.16 22,16.42 22,12A10,10 0 0,0 12,2Z\" />\n                            </svg>} />\n                            <BottomNavigationAction label=\"LinkedIn\" onClick={() => window.open(\"https://www.linkedin.com/in/yardenroee/\", \"_blank\")} icon={<svg style={{ width: 32, height: 32 }} viewBox=\"0 0 24 24\">\n                                <path fill=\"#000000\" d=\"M19,3A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5A2,2 0 0,1 3,19V5A2,2 0 0,1 5,3H19M18.5,18.5V13.2A3.26,3.26 0 0,0 15.24,9.94C14.39,9.94 13.4,10.46 12.92,11.24V10.13H10.13V18.5H12.92V13.57C12.92,12.8 13.54,12.17 14.31,12.17A1.4,1.4 0 0,1 15.71,13.57V18.5H18.5M6.88,8.56A1.68,1.68 0 0,0 8.56,6.88C8.56,5.95 7.81,5.19 6.88,5.19A1.69,1.69 0 0,0 5.19,6.88C5.19,7.81 5.95,8.56 6.88,8.56M8.27,18.5V10.13H5.5V18.5H8.27Z\" />\n                            </svg>} />\n                            <BottomNavigationAction label=\"Portfolio\" onClick={() => window.open(\"https://yardenroee.com/\", \"_blank\")} icon={<svg style={{ width: 32, height: 32 }} viewBox=\"0 0 24 24\">\n                                <path fill=\"#000000\" d=\"M12,1L3,5V11C3,16.55 6.84,21.74 12,23C17.16,21.74 21,16.55 21,11V5L12,1M12,5A3,3 0 0,1 15,8A3,3 0 0,1 12,11A3,3 0 0,1 9,8A3,3 0 0,1 12,5M17.13,17C15.92,18.85 14.11,20.24 12,20.92C9.89,20.24 8.08,18.85 6.87,17C6.53,16.5 6.24,16 6,15.47C6,13.82 8.71,12.47 12,12.47C15.29,12.47 18,13.79 18,15.47C17.76,16 17.47,16.5 17.13,17Z\" />\n                            </svg>} />\n                        </BottomNavigation>\n\n                    </div>\n\n                    <div id='map' className={classes.mapWindow}>\n                        <MapContainer data={weatherInfo}/>\n                    </div>\n                </div>\n\n                <div className={classes.flex}>\n                    <TextField\n                        className={classes.textField}\n                        id=\"standard-dense\"\n                        label=\"Location\"\n                        value={textValue}\n                        onChange={e => changeTextValue(e.target.value)}\n                    />\n                    <Button variant=\"contained\" color=\"primary\" className={classes.button}\n                    onClick={() => {\n                        fetchData(textValue);\n                        changeTextValue('');\n                    }}>\n                        Search\n                    </Button>\n                </div>\n            </Paper>\n        </div>\n    )\n}","import React from 'react';\nimport './App.css';\nimport Dashboard from './dashboard';\nimport Store from './store';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Store>\n      <Dashboard />\n      </Store>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}