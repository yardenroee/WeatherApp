{"ast":null,"code":"import _slicedToArray from \"/Users/yardennegri/Desktop/weather-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/yardennegri/Desktop/weather-app/src/store.js\";\nimport React from 'react';\nexport const CTX = React.createContext();\n\nfunction reducer(state, action) {\n  const _action$payload = action.payload,\n        name = _action$payload.name,\n        weather = _action$payload.weather,\n        main = _action$payload.main;\n\n  switch (action.type) {\n    case \"RECEIVE_LOCATION\":\n      return {\n        name,\n        weather,\n        main\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst initialState = '';\nlet defaultCity;\nexport default function Store(props) {\n  if (!defaultCity) {\n    setTimeout(e => {\n      fetch(\"https://api.openweathermap.org/data/2.5/weather?zip=10022,us&units=imperial&appid=a673f727f21560d303446f34d91487b1\").then(res => {\n        return res.json();\n      }).then(res => {\n        dispatch({\n          type: \"RECEIVE_LOCATION\",\n          payload: res\n        });\n      });\n    }, 300);\n    defaultCity = true;\n  }\n\n  const _React$useReducer = React.useReducer(reducer, initialState),\n        _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n        weatherInfo = _React$useReducer2[0],\n        dispatch = _React$useReducer2[1];\n\n  const fetchData = function (value) {\n    fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(value, \"&units=imperial&appid=a673f727f21560d303446f34d91487b1\")).then(res => {\n      return res.json();\n    }).then(res => {\n      dispatch({\n        type: \"RECEIVE_LOCATION\",\n        payload: res\n      });\n    });\n  };\n\n  return React.createElement(CTX.Provider, {\n    value: {\n      fetchData,\n      weatherInfo\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, props.children);\n}","map":{"version":3,"sources":["/Users/yardennegri/Desktop/weather-app/src/store.js"],"names":["React","CTX","createContext","reducer","state","action","payload","name","weather","main","type","initialState","defaultCity","Store","props","setTimeout","e","fetch","then","res","json","dispatch","useReducer","weatherInfo","fetchData","value","children"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,GAAG,GAAGD,KAAK,CAACE,aAAN,EAAZ;;AAGP,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAA+B;AAAA,0BAEIA,MAAM,CAACC,OAFX;AAAA,QAEnBC,IAFmB,mBAEnBA,IAFmB;AAAA,QAEbC,OAFa,mBAEbA,OAFa;AAAA,QAEJC,IAFI,mBAEJA,IAFI;;AAG3B,UAAQJ,MAAM,CAACK,IAAf;AACI,SAAK,kBAAL;AACI,aAAQ;AACJH,QAAAA,IADI;AAEJC,QAAAA,OAFI;AAGJC,QAAAA;AAHI,OAAR;;AAMJ;AACI,aAAOL,KAAP;AATR;AAWH;;AAGD,MAAMO,YAAY,GAAG,EAArB;AAEA,IAAIC,WAAJ;AAIA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAqB;AAGhC,MAAG,CAACF,WAAJ,EAAiB;AACjBG,IAAAA,UAAU,CAACC,CAAC,IAAI;AAACC,MAAAA,KAAK,sHAAL,CACZC,IADY,CACPC,GAAG,IAAI;AACT,eAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,OAHY,EAGVF,IAHU,CAGLC,GAAG,IAAI;AACXE,QAAAA,QAAQ,CAAC;AAAEX,UAAAA,IAAI,EAAE,kBAAR;AAA4BJ,UAAAA,OAAO,EAAEa;AAArC,SAAD,CAAR;AACH,OALY;AAKT,KALE,EAKA,GALA,CAAV;AAMIP,IAAAA,WAAW,GAAG,IAAd;AACH;;AAX+B,4BAaAZ,KAAK,CAACsB,UAAN,CAAiBnB,OAAjB,EAA0BQ,YAA1B,CAbA;AAAA;AAAA,QAazBY,WAbyB;AAAA,QAaZF,QAbY;;AAehC,QAAMG,SAAS,GAAG,UAAUC,KAAV,EAAiB;AAC/BR,IAAAA,KAAK,6DAAsDQ,KAAtD,4DAAL,CACKP,IADL,CACUC,GAAG,IAAI;AACT,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,KAHL,EAGOF,IAHP,CAGYC,GAAG,IAAI;AACXE,MAAAA,QAAQ,CAAC;AAAEX,QAAAA,IAAI,EAAE,kBAAR;AAA4BJ,QAAAA,OAAO,EAAEa;AAArC,OAAD,CAAR;AACH,KALL;AAOH,GARD;;AASA,SACI,oBAAC,GAAD,CAAK,QAAL;AAAc,IAAA,KAAK,EAAE;AAACK,MAAAA,SAAD;AAAYD,MAAAA;AAAZ,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,KAAK,CAACY,QADX,CADJ;AAKH","sourcesContent":["import React from 'react';\n\nexport const CTX = React.createContext();\n\n\nfunction reducer(state, action){\n\n    const { name, weather, main} = action.payload;\n    switch (action.type) {\n        case \"RECEIVE_LOCATION\":\n            return ({\n                name,\n                weather,\n                main,\n            });\n    \n        default:\n            return state;\n    }\n}\n\n\nconst initialState = '';\n\nlet defaultCity;\n\n\n\nexport default function Store(props){\n\n    \n    if(!defaultCity) {\n    setTimeout(e => {fetch(`https://api.openweathermap.org/data/2.5/weather?zip=10022,us&units=imperial&appid=a673f727f21560d303446f34d91487b1`)\n        .then(res => {\n            return res.json();\n        }).then(res => {\n            dispatch({ type: \"RECEIVE_LOCATION\", payload: res });\n        });}, 300);\n        defaultCity = true;\n    }\n    \n    const [weatherInfo, dispatch] = React.useReducer(reducer, initialState);\n\n    const fetchData = function (value) {\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${value}&units=imperial&appid=a673f727f21560d303446f34d91487b1`)\n            .then(res => {\n                return res.json();\n            }).then(res => {\n                dispatch({ type: \"RECEIVE_LOCATION\", payload: res });\n            }\n            );\n    };\n    return(\n        <CTX.Provider value={{fetchData, weatherInfo}}>\n            {props.children}\n        </CTX.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}