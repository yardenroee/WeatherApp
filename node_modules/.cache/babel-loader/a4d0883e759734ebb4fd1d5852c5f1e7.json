{"ast":null,"code":"import _slicedToArray from \"/Users/yardennegri/Desktop/weather-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/yardennegri/Desktop/weather-app/src/store.js\";\nimport React from 'react';\nexport const CTX = React.createContext();\n\nfunction reducer(state, action) {\n  const _action$payload = action.payload,\n        name = _action$payload.name,\n        weather = _action$payload.weather,\n        main = _action$payload.main;\n\n  switch (action.type) {\n    case \"RECEIVE_LOCATION\":\n      return {\n        name,\n        weather,\n        main\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst initialState = ''; // function fetchWeatherData(value) {\n//     fetch(`https://api.openweathermap.org/data/2.5/weather?q=${value},us&units=imperial&appid=a673f727f21560d303446f34d91487b1`)\n//     .then(res => {\n//         return res;\n//     }).then( res => {\n//         dispatch({type: \"RECEIVE_LOCATION\", payload: res});\n//     }\n//     );\n// }\n\nexport default function Store(props) {\n  const _React$useReducer = React.useReducer(reducer, initialState),\n        _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n        weatherInfo = _React$useReducer2[0],\n        dispatch = _React$useReducer2[1];\n\n  const fetchData = function (value) {\n    fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(value, \",us&units=imperial&appid=a673f727f21560d303446f34d91487b1\")).then(res => {\n      return res;\n    }).then(res => {\n      dispatch({\n        type: \"RECEIVE_LOCATION\",\n        payload: res\n      });\n    });\n  };\n\n  return React.createElement(CTX.Provider, {\n    value: {\n      weatherInfo,\n      fetchWeatherData\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, props.children);\n}","map":{"version":3,"sources":["/Users/yardennegri/Desktop/weather-app/src/store.js"],"names":["React","CTX","createContext","reducer","state","action","payload","name","weather","main","type","initialState","Store","props","useReducer","weatherInfo","dispatch","fetchData","value","fetch","then","res","fetchWeatherData","children"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,GAAG,GAAGD,KAAK,CAACE,aAAN,EAAZ;;AAEP,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAA+B;AAAA,0BACIA,MAAM,CAACC,OADX;AAAA,QACnBC,IADmB,mBACnBA,IADmB;AAAA,QACbC,OADa,mBACbA,OADa;AAAA,QACJC,IADI,mBACJA,IADI;;AAE3B,UAAQJ,MAAM,CAACK,IAAf;AACI,SAAK,kBAAL;AACI,aAAQ;AACJH,QAAAA,IADI;AAEJC,QAAAA,OAFI;AAGJC,QAAAA;AAHI,OAAR;;AAMJ;AACI,aAAOL,KAAP;AATR;AAWH;;AAED,MAAMO,YAAY,GAAG,EAArB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAqB;AAAA,4BAEAb,KAAK,CAACc,UAAN,CAAiBX,OAAjB,EAA0BQ,YAA1B,CAFA;AAAA;AAAA,QAEzBI,WAFyB;AAAA,QAEZC,QAFY;;AAGhC,QAAMC,SAAS,GAAG,UAAUC,KAAV,EAAiB;AAC/BC,IAAAA,KAAK,6DAAsDD,KAAtD,+DAAL,CACKE,IADL,CACUC,GAAG,IAAI;AACT,aAAOA,GAAP;AACH,KAHL,EAGOD,IAHP,CAGYC,GAAG,IAAI;AACXL,MAAAA,QAAQ,CAAC;AAAEN,QAAAA,IAAI,EAAE,kBAAR;AAA4BJ,QAAAA,OAAO,EAAEe;AAArC,OAAD,CAAR;AACH,KALL;AAOH,GARD;;AASA,SACI,oBAAC,GAAD,CAAK,QAAL;AAAc,IAAA,KAAK,EAAE;AAACN,MAAAA,WAAD;AAAcO,MAAAA;AAAd,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,KAAK,CAACU,QADX,CADJ;AAKH","sourcesContent":["import React from 'react';\n\nexport const CTX = React.createContext();\n\nfunction reducer(state, action){\n    const { name, weather, main} = action.payload;\n    switch (action.type) {\n        case \"RECEIVE_LOCATION\":\n            return ({\n                name,\n                weather,\n                main,\n            });\n    \n        default:\n            return state;\n    }\n}\n\nconst initialState = '';\n\n// function fetchWeatherData(value) {\n//     fetch(`https://api.openweathermap.org/data/2.5/weather?q=${value},us&units=imperial&appid=a673f727f21560d303446f34d91487b1`)\n//     .then(res => {\n//         return res;\n//     }).then( res => {\n//         dispatch({type: \"RECEIVE_LOCATION\", payload: res});\n//     }\n//     );\n// }\n\n\nexport default function Store(props){\n\n    const [weatherInfo, dispatch] = React.useReducer(reducer, initialState);\n    const fetchData = function (value) {\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${value},us&units=imperial&appid=a673f727f21560d303446f34d91487b1`)\n            .then(res => {\n                return res;\n            }).then(res => {\n                dispatch({ type: \"RECEIVE_LOCATION\", payload: res });\n            }\n            );\n    }\n    return(\n        <CTX.Provider value={{weatherInfo, fetchWeatherData}}>\n            {props.children}\n        </CTX.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}