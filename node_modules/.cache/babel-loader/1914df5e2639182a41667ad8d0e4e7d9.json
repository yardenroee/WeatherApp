{"ast":null,"code":"import _slicedToArray from \"/Users/yardennegri/Desktop/weather-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/yardennegri/Desktop/weather-app/src/store.js\";\nimport React from 'react';\nexport const CTX = React.createContext();\n\nfunction reducer(state, action) {\n  const _action$payload = action.payload,\n        name = _action$payload.name,\n        weather = _action$payload.weather,\n        main = _action$payload.main;\n\n  switch (action.type) {\n    case \"RECEIVE_LOCATION\":\n      console.log(name, weather, main);\n      return {\n        name,\n        weather,\n        main\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst initialState = fetch(\"https://api.openweathermap.org/data/2.5/weather?zip=10022,us&units=imperial&appid=a673f727f21560d303446f34d91487b1\").then(res => {\n  return res;\n}).then(res => {\n  dispatch({\n    type: \"RECEIVE_LOCATION\",\n    payload: res\n  });\n});\nexport default function Store(props) {\n  const _React$useReducer = React.useReducer(reducer, initialState),\n        _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n        defaultWeatherInfo = _React$useReducer2[0],\n        dispatch = _React$useReducer2[1];\n\n  const fetchData = function (value) {\n    fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(value, \"&units=imperial&appid=a673f727f21560d303446f34d91487b1\")).then(res => {\n      return res.json();\n    }).then(res => {\n      dispatch({\n        type: \"RECEIVE_LOCATION\",\n        payload: res\n      });\n    });\n  };\n\n  return React.createElement(CTX.Provider, {\n    value: {\n      fetchData,\n      defaultWeatherInfo\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, props.children);\n}","map":{"version":3,"sources":["/Users/yardennegri/Desktop/weather-app/src/store.js"],"names":["React","CTX","createContext","reducer","state","action","payload","name","weather","main","type","console","log","initialState","fetch","then","res","dispatch","Store","props","useReducer","defaultWeatherInfo","fetchData","value","json","children"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,GAAG,GAAGD,KAAK,CAACE,aAAN,EAAZ;;AAGP,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAA+B;AAAA,0BAEIA,MAAM,CAACC,OAFX;AAAA,QAEnBC,IAFmB,mBAEnBA,IAFmB;AAAA,QAEbC,OAFa,mBAEbA,OAFa;AAAA,QAEJC,IAFI,mBAEJA,IAFI;;AAG3B,UAAQJ,MAAM,CAACK,IAAf;AACI,SAAK,kBAAL;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAAiBC,OAAjB,EAAyBC,IAAzB;AACA,aAAQ;AACJF,QAAAA,IADI;AAEJC,QAAAA,OAFI;AAGJC,QAAAA;AAHI,OAAR;;AAMJ;AACI,aAAOL,KAAP;AAVR;AAYH;;AAGD,MAAMS,YAAY,GAAGC,KAAK,sHAAL,CACAC,IADA,CACKC,GAAG,IAAI;AACT,SAAOA,GAAP;AACH,CAHA,EAGED,IAHF,CAGOC,GAAG,IAAI;AACXC,EAAAA,QAAQ,CAAC;AAAEP,IAAAA,IAAI,EAAE,kBAAR;AAA4BJ,IAAAA,OAAO,EAAEU;AAArC,GAAD,CAAR;AACH,CALA,CAArB;AAUA,eAAe,SAASE,KAAT,CAAeC,KAAf,EAAqB;AAAA,4BAEOnB,KAAK,CAACoB,UAAN,CAAiBjB,OAAjB,EAA0BU,YAA1B,CAFP;AAAA;AAAA,QAEzBQ,kBAFyB;AAAA,QAELJ,QAFK;;AAGhC,QAAMK,SAAS,GAAG,UAAUC,KAAV,EAAiB;AAC/BT,IAAAA,KAAK,6DAAsDS,KAAtD,4DAAL,CACKR,IADL,CACUC,GAAG,IAAI;AACT,aAAOA,GAAG,CAACQ,IAAJ,EAAP;AACH,KAHL,EAGOT,IAHP,CAGYC,GAAG,IAAI;AACXC,MAAAA,QAAQ,CAAC;AAAEP,QAAAA,IAAI,EAAE,kBAAR;AAA4BJ,QAAAA,OAAO,EAAEU;AAArC,OAAD,CAAR;AACH,KALL;AAOH,GARD;;AASA,SACI,oBAAC,GAAD,CAAK,QAAL;AAAc,IAAA,KAAK,EAAE;AAACM,MAAAA,SAAD;AAAYD,MAAAA;AAAZ,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,CAACM,QADX,CADJ;AAKH","sourcesContent":["import React from 'react';\n\nexport const CTX = React.createContext();\n\n\nfunction reducer(state, action){\n\n    const { name, weather, main} = action.payload;\n    switch (action.type) {\n        case \"RECEIVE_LOCATION\":\n            console.log(name,weather,main);\n            return ({\n                name,\n                weather,\n                main,\n            });\n    \n        default:\n            return state;\n    }\n}\n\n\nconst initialState = fetch(`https://api.openweathermap.org/data/2.5/weather?zip=10022,us&units=imperial&appid=a673f727f21560d303446f34d91487b1`)\n                    .then(res => {\n                        return res;\n                    }).then(res => {\n                        dispatch({ type: \"RECEIVE_LOCATION\", payload: res });\n                    })\n\n\n\n\nexport default function Store(props){\n\n    const [defaultWeatherInfo, dispatch] = React.useReducer(reducer, initialState);\n    const fetchData = function (value) {\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${value}&units=imperial&appid=a673f727f21560d303446f34d91487b1`)\n            .then(res => {\n                return res.json();\n            }).then(res => {\n                dispatch({ type: \"RECEIVE_LOCATION\", payload: res });\n            }\n            );\n    };\n    return(\n        <CTX.Provider value={{fetchData, defaultWeatherInfo}}>\n            {props.children}\n        </CTX.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}