{"ast":null,"code":"import _slicedToArray from \"/Users/yardennegri/Desktop/weather-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/yardennegri/Desktop/weather-app/src/store.js\";\nimport React from 'react';\nexport const CTX = React.createContext(); //\"coord\":{\"lon\":-81.74,\"lat\":41.44}\n\nfunction reducer(state, action) {\n  const _action$payload = action.payload,\n        name = _action$payload.name,\n        weather = _action$payload.weather,\n        main = _action$payload.main,\n        coord = _action$payload.coord;\n\n  switch (action.type) {\n    case \"RECEIVE_LOCATION\":\n      return {\n        name,\n        weather,\n        main,\n        coord\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst initialState = {\n  name: '',\n  weather: [{\n    main: '',\n    icon: ''\n  }],\n  main: {\n    temp: '',\n    temp_max: '',\n    temp_min: ''\n  },\n  coord: {\n    lng: -73.9405301,\n    lat: 40.7687653\n  }\n};\nlet defaultCity;\nexport default function Store(props) {\n  if (!defaultCity) {\n    fetch(\"https://api.openweathermap.org/data/2.5/weather?zip=10022,us&units=imperial&appid=a673f727f21560d303446f34d91487b1\").then(res => {\n      return res.json();\n    }).then(res => {\n      dispatch({\n        type: \"RECEIVE_LOCATION\",\n        payload: res\n      });\n    });\n    defaultCity = true;\n  }\n\n  const _React$useReducer = React.useReducer(reducer, initialState),\n        _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n        weatherInfo = _React$useReducer2[0],\n        dispatch = _React$useReducer2[1];\n\n  const fetchData = function (value) {\n    fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(value, \"&units=imperial&appid=a673f727f21560d303446f34d91487b1\")).then(res => {\n      return res.json();\n    }).then(res => {\n      dispatch({\n        type: \"RECEIVE_LOCATION\",\n        payload: res\n      });\n    }, error => {\n      dispatch({\n        type: \"RECEIVE_LOCATION\",\n        payload: initialState\n      });\n    });\n  };\n\n  return React.createElement(CTX.Provider, {\n    value: {\n      fetchData,\n      weatherInfo\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, props.children);\n}","map":{"version":3,"sources":["/Users/yardennegri/Desktop/weather-app/src/store.js"],"names":["React","CTX","createContext","reducer","state","action","payload","name","weather","main","coord","type","initialState","icon","temp","temp_max","temp_min","lng","lat","defaultCity","Store","props","fetch","then","res","json","dispatch","useReducer","weatherInfo","fetchData","value","error","children"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,GAAG,GAAGD,KAAK,CAACE,aAAN,EAAZ,C,CAEP;;AACA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAAA,0BAEWA,MAAM,CAACC,OAFlB;AAAA,QAEpBC,IAFoB,mBAEpBA,IAFoB;AAAA,QAEdC,OAFc,mBAEdA,OAFc;AAAA,QAELC,IAFK,mBAELA,IAFK;AAAA,QAECC,KAFD,mBAECA,KAFD;;AAI5B,UAAQL,MAAM,CAACM,IAAf;AACI,SAAK,kBAAL;AACI,aAAQ;AACJJ,QAAAA,IADI;AAEJC,QAAAA,OAFI;AAGJC,QAAAA,IAHI;AAIJC,QAAAA;AAJI,OAAR;;AAOJ;AACI,aAAON,KAAP;AAVR;AAYH;;AAED,MAAMQ,YAAY,GAAG;AACjBL,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,OAAO,EAAE,CAAC;AAACC,IAAAA,IAAI,EAAE,EAAP;AAAWI,IAAAA,IAAI,EAAE;AAAjB,GAAD,CAFQ;AAGjBJ,EAAAA,IAAI,EAAE;AAACK,IAAAA,IAAI,EAAC,EAAN;AAAUC,IAAAA,QAAQ,EAAC,EAAnB;AAAuBC,IAAAA,QAAQ,EAAE;AAAjC,GAHW;AAIjBN,EAAAA,KAAK,EAAE;AAAEO,IAAAA,GAAG,EAAE,CAAC,UAAR;AAAoBC,IAAAA,GAAG,EAAE;AAAzB;AAJU,CAArB;AAQA,IAAIC,WAAJ;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAEjC,MAAI,CAACF,WAAL,EAAkB;AACdG,IAAAA,KAAK,sHAAL,CACKC,IADL,CACUC,GAAG,IAAI;AACT,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,KAHL,EAGOF,IAHP,CAGYC,GAAG,IAAI;AACXE,MAAAA,QAAQ,CAAC;AAAEf,QAAAA,IAAI,EAAE,kBAAR;AAA4BL,QAAAA,OAAO,EAAEkB;AAArC,OAAD,CAAR;AACH,KALL;AAMAL,IAAAA,WAAW,GAAG,IAAd;AACH;;AAVgC,4BAYDnB,KAAK,CAAC2B,UAAN,CAAiBxB,OAAjB,EAA0BS,YAA1B,CAZC;AAAA;AAAA,QAY1BgB,WAZ0B;AAAA,QAYbF,QAZa;;AAcjC,QAAMG,SAAS,GAAG,UAAUC,KAAV,EAAiB;AAC/BR,IAAAA,KAAK,6DAAsDQ,KAAtD,4DAAL,CACKP,IADL,CACUC,GAAG,IAAI;AACT,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,KAHL,EAGOF,IAHP,CAGYC,GAAG,IAAI;AACXE,MAAAA,QAAQ,CAAC;AAAEf,QAAAA,IAAI,EAAE,kBAAR;AAA4BL,QAAAA,OAAO,EAAEkB;AAArC,OAAD,CAAR;AACH,KALL,EAKQO,KAAD,IAAW;AACVL,MAAAA,QAAQ,CAAC;AAACf,QAAAA,IAAI,EAAE,kBAAP;AAA2BL,QAAAA,OAAO,EAAEM;AAApC,OAAD,CAAR;AACH,KAPL;AASH,GAVD;;AAWA,SACI,oBAAC,GAAD,CAAK,QAAL;AAAc,IAAA,KAAK,EAAE;AAAEiB,MAAAA,SAAF;AAAaD,MAAAA;AAAb,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,KAAK,CAACW,QADX,CADJ;AAKH","sourcesContent":["import React from 'react';\n\nexport const CTX = React.createContext();\n\n//\"coord\":{\"lon\":-81.74,\"lat\":41.44}\nfunction reducer(state, action) {\n\n    const { name, weather, main, coord } = action.payload;\n    \n    switch (action.type) {\n        case \"RECEIVE_LOCATION\":\n            return ({\n                name,\n                weather,\n                main,\n                coord\n            });\n\n        default:\n            return state;\n    }\n}\n\nconst initialState = {\n    name: '',\n    weather: [{main: '', icon: ''}],\n    main: {temp:'', temp_max:'', temp_min: ''},\n    coord: { lng: -73.9405301, lat: 40.7687653}\n};\n\n\nlet defaultCity;\n\nexport default function Store(props) {\n\n    if (!defaultCity) {\n        fetch(`https://api.openweathermap.org/data/2.5/weather?zip=10022,us&units=imperial&appid=a673f727f21560d303446f34d91487b1`)\n            .then(res => {\n                return res.json();\n            }).then(res => {\n                dispatch({ type: \"RECEIVE_LOCATION\", payload: res });\n            });\n        defaultCity = true;\n    }\n\n    const [weatherInfo, dispatch] = React.useReducer(reducer, initialState);\n\n    const fetchData = function (value) {\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${value}&units=imperial&appid=a673f727f21560d303446f34d91487b1`)\n            .then(res => {\n                return res.json();\n            }).then(res => {\n                dispatch({ type: \"RECEIVE_LOCATION\", payload: res });\n            }, (error) => {\n                dispatch({type: \"RECEIVE_LOCATION\", payload: initialState});\n            }\n            );\n    };\n    return (\n        <CTX.Provider value={{ fetchData, weatherInfo }}>\n            {props.children}\n        </CTX.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}