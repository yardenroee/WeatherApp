{"ast":null,"code":"import _slicedToArray from \"/Users/yardennegri/Desktop/weather-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/yardennegri/Desktop/weather-app/src/store.js\";\nimport React from 'react';\nexport const CTX = React.createContext(); //\"coord\":{\"lon\":-81.74,\"lat\":41.44}\n\nconst initialState = {\n  name: '',\n  weather: [{\n    main: '',\n    icon: ''\n  }],\n  main: {\n    temp: '',\n    temp_max: '',\n    temp_min: ''\n  },\n  lng: -73.97,\n  lat: 40.76\n};\n\nfunction reducer(state, action) {\n  if (action.payload.cod === '404' || action.payload.cod === '400') {\n    return {\n      name: '',\n      weather: [{\n        main: '',\n        icon: ''\n      }],\n      main: {\n        temp: '',\n        temp_max: '',\n        temp_min: ''\n      }\n    };\n  }\n\n  const _action$payload = action.payload,\n        name = _action$payload.name,\n        weather = _action$payload.weather,\n        main = _action$payload.main,\n        coord = _action$payload.coord;\n  const lon = coord.lon,\n        lat = coord.lat;\n\n  switch (action.type) {\n    case \"RECEIVE_LOCATION\":\n      return {\n        name,\n        weather,\n        main,\n        lng: lon,\n        lat\n      };\n\n    default:\n      return state;\n  }\n}\n\nlet defaultCity;\nexport default function Store(props) {\n  if (!defaultCity) {\n    fetch(\"https://api.openweathermap.org/data/2.5/weather?zip=10022,us&units=imperial&appid=a673f727f21560d303446f34d91487b1\").then(res => {\n      return res.json();\n    }).then(res => {\n      dispatch({\n        type: \"RECEIVE_LOCATION\",\n        payload: res\n      });\n    });\n    defaultCity = true;\n  }\n\n  const _React$useReducer = React.useReducer(reducer, initialState),\n        _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n        weatherInfo = _React$useReducer2[0],\n        dispatch = _React$useReducer2[1];\n\n  const fetchData = function (value) {\n    fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(value, \"&units=imperial&appid=a673f727f21560d303446f34d91487b1\")).then(res => {\n      return res.json();\n    }).then(res => {\n      dispatch({\n        type: \"RECEIVE_LOCATION\",\n        payload: res\n      });\n    }, error => {\n      dispatch({\n        type: \"RECEIVE_LOCATION\",\n        payload: initialState\n      });\n    });\n  };\n\n  return React.createElement(CTX.Provider, {\n    value: {\n      fetchData,\n      weatherInfo\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, props.children);\n}","map":{"version":3,"sources":["/Users/yardennegri/Desktop/weather-app/src/store.js"],"names":["React","CTX","createContext","initialState","name","weather","main","icon","temp","temp_max","temp_min","lng","lat","reducer","state","action","payload","cod","coord","lon","type","defaultCity","Store","props","fetch","then","res","json","dispatch","useReducer","weatherInfo","fetchData","value","error","children"],"mappings":"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","sourcesContent":["import React from 'react';\n\nexport const CTX = React.createContext();\n\n//\"coord\":{\"lon\":-81.74,\"lat\":41.44}\n\nconst initialState = {\n    name: '',\n    weather: [{ main: '', icon: '' }],\n    main: { temp: '', temp_max: '', temp_min: '' },\n    lng: -73.97,\n    lat: 40.76,\n};\n\nfunction reducer(state, action) {\n    if(action.payload.cod === '404' || action.payload.cod === '400') {\n        return ({\n                name: '',\n                weather: [{ main: '', icon: '' }],\n                main: { temp: '', temp_max: '', temp_min: '' },\n            }\n        );\n    }\n    const { name, weather, main, coord } = action.payload;\n    const {lon, lat} = coord;\n    switch (action.type) {\n        case \"RECEIVE_LOCATION\":\n            return ({\n                name,\n                weather,\n                main,\n                lng: lon,\n                lat,\n            });\n\n        default:\n            return state;\n    }\n}\n\n\nlet defaultCity;\n\nexport default function Store(props) {\n\n    if (!defaultCity) {\n        fetch(`https://api.openweathermap.org/data/2.5/weather?zip=10022,us&units=imperial&appid=a673f727f21560d303446f34d91487b1`)\n            .then(res => {\n                return res.json();\n            }).then(res => {\n                dispatch({ type: \"RECEIVE_LOCATION\", payload: res });\n            });\n        defaultCity = true;\n    }\n\n    const [weatherInfo, dispatch] = React.useReducer(reducer, initialState);\n\n    const fetchData = function (value) {\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${value}&units=imperial&appid=a673f727f21560d303446f34d91487b1`)\n            .then(res => {\n                return res.json();\n            }).then(res => {\n                dispatch({ type: \"RECEIVE_LOCATION\", payload: res });\n            }, (error) => {\n                dispatch({type: \"RECEIVE_LOCATION\", payload: initialState});\n            }\n            );\n    };\n    return (\n        <CTX.Provider value={{ fetchData, weatherInfo }}>\n            {props.children}\n        </CTX.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}