{"ast":null,"code":"var _jsxFileName = \"/Users/yardennegri/Desktop/weather-app/src/weather_info.jsx\";\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nclass WeatherInfoComponent extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const _this$props$data = this.props.data,\n          main = _this$props$data.main,\n          weather = _this$props$data.weather,\n          name = _this$props$data.name;\n\n    if (main && weather && name) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h4\",\n        component: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, name), React.createElement(\"img\", {\n        src: \"http://openweathermap.org/img/wn/\".concat(weather[0].icon, \"@2x.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        variant: \"h5\",\n        component: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, weather[0].main), React.createElement(Typography, {\n        variant: \"h5\",\n        component: \"h5\",\n        style: {\n          padding: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, Math.ceil(main.temp) + '째'), React.createElement(Typography, {\n        variant: \"subtitle1\",\n        component: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Today's High: \", main.temp_max, \"\\xB0 \\xA0 Today's Low: \", main.temp_min, \"\\xB0\"), React.createElement(Typography, {\n        variant: \"subtitle2\",\n        component: \"h2\",\n        style: {\n          padding: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Humidity: \", main.humidity, \"%\"));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h5\",\n        component: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"The search could not return any result!\"), React.createElement(Typography, {\n        variant: \"subtitle2\",\n        component: \"h2\",\n        style: {\n          padding: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Please be a little more specific.\"), React.createElement(Typography, {\n        variant: \"subtitle1\",\n        component: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"You can use the map to look around the globe!\"));\n    }\n  }\n\n}\n\nexport default WeatherInfoComponent;","map":{"version":3,"sources":["/Users/yardennegri/Desktop/weather-app/src/weather_info.jsx"],"names":["React","Typography","WeatherInfoComponent","Component","constructor","props","render","data","main","weather","name","icon","padding","Math","ceil","temp","temp_max","temp_min","humidity"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,MAAMC,oBAAN,SAAmCF,KAAK,CAACG,SAAzC,CAAmD;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAAA,6BACyB,KAAKD,KAAL,CAAWE,IADpC;AAAA,UACEC,IADF,oBACEA,IADF;AAAA,UACQC,OADR,oBACQA,OADR;AAAA,UACiBC,IADjB,oBACiBA,IADjB;;AAEL,QAAGF,IAAI,IAAIC,OAAR,IAAmBC,IAAtB,EAA4B;AACxB,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,IADL,CADJ,EAKI;AAAK,QAAA,GAAG,6CAAsCD,OAAO,CAAC,CAAD,CAAP,CAAWE,IAAjD,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAMI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKF,OAAO,CAAC,CAAD,CAAP,CAAWD,IADhB,CANJ,EAUI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAC,IAAnC;AAAwC,QAAA,KAAK,EAAE;AAAEI,UAAAA,OAAO,EAAE;AAAX,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKC,IAAI,CAACC,IAAL,CAAUN,IAAI,CAACO,IAAf,IAAuB,GAD5B,CAVJ,EAcI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,WAApB;AAAgC,QAAA,SAAS,EAAC,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACmBP,IAAI,CAACQ,QADxB,6BACwDR,IAAI,CAACS,QAD7D,SAdJ,EAkBI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,WAApB;AAAgC,QAAA,SAAS,EAAC,IAA1C;AAA+C,QAAA,KAAK,EAAE;AAACL,UAAAA,OAAO,EAAE;AAAV,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACeJ,IAAI,CAACU,QADpB,MAlBJ,CADA;AAwBH,KAzBD,MAyBO;AACH,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDADJ,EAKI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,WAApB;AAAgC,QAAA,SAAS,EAAC,IAA1C;AAA+C,QAAA,KAAK,EAAE;AAAEN,UAAAA,OAAO,EAAE;AAAX,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CALJ,EASI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,WAApB;AAAgC,QAAA,SAAS,EAAC,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDATJ,CADJ;AAeH;AACJ;;AAjD8C;;AAoDnD,eAAeV,oBAAf","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nclass WeatherInfoComponent extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const {main, weather, name} = this.props.data;\n        if(main && weather && name) {\n            return (\n            <div>\n                <Typography variant=\"h4\" component=\"h4\">\n                    {name}\n                </Typography>\n\n                <img src={`http://openweathermap.org/img/wn/${weather[0].icon}@2x.png`}/> \n                <Typography variant=\"h5\" component=\"h5\">\n                    {weather[0].main}\n                </Typography>\n\n                <Typography variant=\"h5\" component=\"h5\" style={{ padding: '20px'}}>\n                    {Math.ceil(main.temp) + '째'}\n                </Typography>\n\n                <Typography variant=\"subtitle1\" component=\"h2\">\n                    Today's High: {main.temp_max}째 &nbsp; Today's Low: {main.temp_min}째\n                </Typography>\n\n                <Typography variant=\"subtitle2\" component=\"h2\" style={{padding: '10px'}}>\n                    Humidity: {main.humidity}%\n                </Typography>\n            </div>\n        )\n        } else {\n            return (\n                <div>\n                    <Typography variant=\"h5\" component=\"h5\">\n                        The search could not return any result!\n                    </Typography>\n                    \n                    <Typography variant=\"subtitle2\" component=\"h2\" style={{ padding: '10px' }}>\n                        Please be a little more specific.\n                    </Typography>\n\n                    <Typography variant=\"subtitle1\" component=\"h2\">\n                        You can use the map to look around the globe!\n                    </Typography>\n                </div>\n            )\n        }\n    }\n}\n\nexport default WeatherInfoComponent;"]},"metadata":{},"sourceType":"module"}