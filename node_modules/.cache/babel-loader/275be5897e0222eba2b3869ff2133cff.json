{"ast":null,"code":"var _jsxFileName = \"/Users/yardennegri/Desktop/weather-app/src/simpleMap.jsx\";\nimport React from 'react';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nexport class MapContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      center: {\n        lng: '',\n        lat: ''\n      }\n    };\n    this.locationRef = React.createRef();\n  }\n\n  componentDidUpdate() {\n    let badSearch = false;\n\n    if (this.props.data.badSearch === false && badSearch === false) {\n      const _this$props$data = this.props.data,\n            lng = _this$props$data.lng,\n            lat = _this$props$data.lat;\n      this.setState({\n        center: {\n          lng,\n          lat\n        }\n      });\n      badSearch = true;\n    }\n  }\n\n  render() {\n    const _this$props$data2 = this.props.data,\n          lng = _this$props$data2.lng,\n          lat = _this$props$data2.lat;\n    const center = {\n      lng,\n      lat\n    };\n    const style = {\n      position: 'none',\n      width: '52%',\n      height: '400px'\n    };\n\n    if (lng && lat) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Map, {\n        style: style,\n        google: this.props.google,\n        initialCenter: center,\n        center: center,\n        zoom: 11,\n        ref: this.locationRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCXWQkmdPXNbv6Zj5dW3GN5mpPM1zTh7nI\"\n})(MapContainer);","map":{"version":3,"sources":["/Users/yardennegri/Desktop/weather-app/src/simpleMap.jsx"],"names":["React","Map","InfoWindow","Marker","GoogleApiWrapper","MapContainer","Component","constructor","props","state","center","lng","lat","locationRef","createRef","componentDidUpdate","badSearch","data","setState","render","style","position","width","height","google","apiKey"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,MAA1B,EAAkCC,gBAAlC,QAA0D,mBAA1D;AAEA,OAAO,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA2C;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AACRC,QAAAA,GAAG,EAAE,EADG;AAERC,QAAAA,GAAG,EAAE;AAFG;AADC,KAAb;AAMA,SAAKC,WAAL,GAAmBb,KAAK,CAACc,SAAN,EAAnB;AACH;;AACDC,EAAAA,kBAAkB,GAAE;AAChB,QAAIC,SAAS,GAAG,KAAhB;;AACA,QAAG,KAAKR,KAAL,CAAWS,IAAX,CAAgBD,SAAhB,KAA8B,KAA9B,IAAuCA,SAAS,KAAK,KAAxD,EAA8D;AAAA,+BACxC,KAAKR,KAAL,CAAWS,IAD6B;AAAA,YACpDN,GADoD,oBACpDA,GADoD;AAAA,YAC/CC,GAD+C,oBAC/CA,GAD+C;AAE1D,WAAKM,QAAL,CAAc;AAACR,QAAAA,MAAM,EAAE;AAACC,UAAAA,GAAD;AAAMC,UAAAA;AAAN;AAAT,OAAd;AACAI,MAAAA,SAAS,GAAG,IAAZ;AACH;AACJ;;AACDG,EAAAA,MAAM,GAAG;AAAA,8BACgB,KAAKX,KAAL,CAAWS,IAD3B;AAAA,UACGN,GADH,qBACGA,GADH;AAAA,UACQC,GADR,qBACQA,GADR;AAEL,UAAMF,MAAM,GAAG;AACXC,MAAAA,GADW;AAEXC,MAAAA;AAFW,KAAf;AAIA,UAAMQ,KAAK,GAAG;AACVC,MAAAA,QAAQ,EAAE,MADA;AAEVC,MAAAA,KAAK,EAAE,KAFG;AAGVC,MAAAA,MAAM,EAAE;AAHE,KAAd;;AAKA,QAAIZ,GAAG,IAAIC,GAAX,EAAgB;AACZ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AACI,QAAA,KAAK,EAAEQ,KADX;AAEI,QAAA,MAAM,EAAE,KAAKZ,KAAL,CAAWgB,MAFvB;AAGI,QAAA,aAAa,EAAEd,MAHnB;AAII,QAAA,MAAM,EAAEA,MAJZ;AAKI,QAAA,IAAI,EAAE,EALV;AAMI,QAAA,GAAG,EAAE,KAAKG,WANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAYH;AACJ;;AA5C6C;AA+ClD,eAAeT,gBAAgB,CAAC;AAC5BqB,EAAAA,MAAM,EAAG;AADmB,CAAD,CAAhB,CAEZpB,YAFY,CAAf","sourcesContent":["import React from 'react';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\n\nexport class MapContainer extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            center: {\n            lng: '',\n            lat: '',\n            }\n        };\n        this.locationRef = React.createRef();\n    }\n    componentDidUpdate(){\n        let badSearch = false;\n        if(this.props.data.badSearch === false && badSearch === false){\n            const{lng, lat} = this.props.data;\n            this.setState({center: {lng, lat}});\n            badSearch = true;\n        }\n    }\n    render() {\n        const { lng, lat } = this.props.data;\n        const center = {\n            lng,\n            lat\n        };\n        const style = {\n            position: 'none',\n            width: '52%',\n            height: '400px'\n        };\n        if (lng && lat) {\n            return (\n                <div>\n                    <Map\n                        style={style}\n                        google={this.props.google}\n                        initialCenter={center}\n                        center={center}\n                        zoom={11}\n                        ref={this.locationRef}\n                    />\n                </div>\n            );\n        }\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: (\"AIzaSyCXWQkmdPXNbv6Zj5dW3GN5mpPM1zTh7nI\")\n})(MapContainer)"]},"metadata":{},"sourceType":"module"}